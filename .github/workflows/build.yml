name: Build

on: [workflow_call, workflow_dispatch]

jobs:
  build:
    env:
      RUSTFLAGS: "-D warnings"
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-netbsd

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Archive
        if: matrix.os == 'windows-latest'
        run: |
          copy target\release\tac.exe tac.exe
          7z a tack-${{ matrix.target }}.zip tac.exe README.md CONTRIBUTORS.md LICENSE-MIT LICENSE-APACHE

      - name: Archive
        if: matrix.os != 'windows-latest'
        run: |
          cp target/release/tac tac
          tar czvf tack-${{ matrix.target }}.tar.gz tac README.md CONTRIBUTORS.md LICENSE-MIT LICENSE-APACHE

      - name: Upload Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tack-${{ matrix.target }}.zip
          path: tack-${{ matrix.target }}.zip
          if-no-files-found: error

      - name: Upload Artifact
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tack-${{ matrix.target }}.tar.gz
          path: tack-${{ matrix.target }}.tar.gz
          if-no-files-found: error
